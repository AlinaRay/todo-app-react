{"version":3,"sources":["components/Header.js","components/Item.js","components/Main.js","components/Footer.js","App.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","text","target","value","onSubmit","preventDefault","addItem","state","_this2","react_default","a","createElement","className","type","placeholder","React","Component","Item","isEdited","currentText","editText","id","toggleEditMode","prevState","editTodoItem","_this$props","onChecked","deleteItem","done","key","checked","onClick","Main","elements","items","map","item","Item_Item","onDeleted","checkAll","htmlFor","Footer","buttons","name","label","renderClearCompleted","deleteAll","renderButtons","_ref","href","concat","onFilterChange","clearCompleted","size","App","createTodoItem","Date","now","newTodo","todoData","toConsumableArray","findElement","findIndex","el","copy","index","objectSpread","forEach","flag","_ref2","filter","newItems","getActiveCount","length","filterBy","showDone","some","todo","counter","visibleItems","Header_Header","Main_Main","Footer_Footer","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.9e9a120e.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Header extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            text: ''\n        };\n    }\n    onChange = (e) => {\n        this.setState({\n            text: e.target.value\n        });\n    };\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.addItem(this.state.text);\n        this.setState({\n            text: ''\n        })\n    };\n    render () {\n        return (\n            <header className=\"header\">\n                <h1>Todo app</h1>\n                <form onSubmit={(e)=> this.onSubmit(e)}>\n                    <input\n                        className=\"new-todo\"\n                        onChange={ this.onChange}\n                        value={this.state.text}\n                        type=\"text\"\n                        placeholder=\"What needs to be done?\"/>\n                </form>\n            </header>\n        )\n    }\n}\n","import React from 'react';\n\nexport default class Item extends React.Component {\n    state = {\n        isEdited: false,\n        currentText: this.props.text\n    };\n    editText = (id, text) => {\n        this.setState(() => {\n            return {\n                currentText: text\n            }\n        })\n    };\n    toggleEditMode = () => {\n        this.setState(prevState => {\n            return {\n                isEdited: !prevState.isEdited\n            }\n        })\n    };\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.editTodoItem(this.props.id, this.state.currentText);\n        this.toggleEditMode();\n    };\n\n    render() {\n        const {onChecked, deleteItem, id, done, text} = this.props;\n        return (\n            <li key={id}>\n                {\n                    this.state.isEdited ? (\n                        <div className=\"view\">\n                            <form onSubmit={(e) => this.onSubmit(e)}>\n                                <input\n                                    className=\"new-todo edit-mode\"\n                                    type=\"text\"\n                                    value={this.state.currentText}\n                                    onChange={(e) => this.editText(id, e.target.value)}\n                                />\n                            </form>\n                        </div>\n                    ) : (\n                        <div className=\"view\">\n                            <input\n                                className=\"toggle\"\n                                type=\"checkbox\"\n                                onChange={() => onChecked(id)}\n                                checked={done}\n                            />\n                            <label onClick={() => this.toggleEditMode()}>\n                                {text}\n                            </label>\n                            <button\n                                className=\"destroy\"\n                                onClick={() => deleteItem(id)}>\n                            </button>\n                        </div>\n                    )\n                }\n            </li>\n        )\n    }\n}","import React from 'react';\nimport Item from './Item';\n\nexport default class Main extends React.Component {\n    render() {\n        let data = this.props.items;\n        let elements = data.map((item) => {\n            return <Item key={item.id}\n                         done = {item.done}\n                         id = {item.id}\n                         text = {item.text}\n                         editTodoItem={this.props.editTodoItem}\n                         deleteItem = {this.props.onDeleted}\n                         onChecked = {this.props.onChecked}/>\n        });\n        return (\n            <main className=\"main\">\n                <input\n                    id=\"toggle-all\"\n                    className=\"toggle-all\"\n                    type=\"checkbox\"\n                    onClick={() => this.props.checkAll()}\n                />\n                <label htmlFor=\"toggle-all\"></label>\n                <ul className=\"todo-list\">\n                    {elements}\n                </ul>\n            </main>\n        )\n    }\n}\n","import React from 'react';\n\nexport default class Footer extends React.Component {\n    buttons = [\n        {id: 0, name: 'all', label: 'All'},\n        {id: 1, name: 'active', label: 'Active'},\n        {id: 2, name: 'done', label: 'Done'}\n    ];\n    renderClearCompleted = () => {\n        return (\n            <button\n                className=\"clear-completed\"\n                onClick={() => this.props.deleteAll()}>\n                Clear completed\n            </button>\n        )\n    };\n    renderButtons = () => {\n        return (\n            this.buttons.map(({id, name, label}) => {\n                return (\n                    <li key={id}>\n                        <a\n                            href={`#/${name}`}\n                            key={name}\n                            onClick={() => this.props.onFilterChange(name)}>{label}\n                        </a>\n                    </li>\n                );\n            })\n        )\n    };\n    render() {\n        const {done} = this.props;\n        let clearCompleted;\n        if (done) {\n            clearCompleted = this.renderClearCompleted();\n        } else {\n            clearCompleted = null;\n        }\n        const buttons = this.renderButtons();\n        return (\n            <footer className=\"footer\">\n            <span className=\"todo-count\">\n                <strong>{this.props.size}</strong>\n                <span>&nbsp;</span>\n                <span>items&nbsp;</span>\n                <span>left</span>\n            </span>\n                <ul className=\"filters\">\n                    {buttons}\n                </ul>\n                {clearCompleted}\n            </footer>\n        )\n    }\n}\n","import React from 'react';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todoData: [],\n            filter: 'all',\n            flag: false,\n            counter: 1\n        };\n    }\n    createTodoItem = (text) => {\n        return {\n            text,\n            done: false,\n            id: Date.now()\n        }\n    };\n    addItem = (newTodo) => {\n        if (newTodo === '') {\n            return;\n        }\n        this.setState((prevState) => ({\n            todoData: [...prevState.todoData, this.createTodoItem(newTodo)]\n        }));\n    };\n    findElement = (todoData, id) => {\n        return todoData.findIndex((el) => el.id === id);\n    };\n\n    onChecked = (id) => {\n        this.setState(({todoData}) => {\n            const copy = [...todoData];\n            const index = this.findElement(copy, id);\n            copy[index] = {\n                ...copy[index],\n                done: !copy[index].done\n            };\n            return {\n                todoData: copy\n            }\n        })\n    };\n    checkAll = () => {\n        this.setState((prevState) => {\n            const elements = [...prevState.todoData];\n            elements.forEach(el => {\n                el.done = !prevState.flag;\n            });\n            return {\n                todoData: elements,\n                flag: !prevState.flag\n            };\n        })\n    };\n    deleteAll = () => {\n        this.setState(({todoData}) => {\n            const arr = todoData.filter(el => !el.done);\n            return {\n                todoData: arr\n            }\n        });\n    };\n    deleteItem = (id) => {\n        const newItems = this.state.todoData.filter((item) => item.id !== id);\n        this.setState({ todoData: newItems })\n    };\n    getActiveCount = () => {\n        return this.state.todoData.filter(el => !el.done).length;\n    };\n    filterBy = (filterBy) => {\n        switch (filterBy) {\n            case 'active':\n                return this.state.todoData.filter(item => !item.done);\n            case 'done':\n                return this.state.todoData.filter(item => item.done);\n            default:\n                return this.state.todoData;\n        }\n    };\n    onFilterChange = (filter) => {\n        this.setState({filter});\n    };\n    showDone = () => {\n        return this.state.todoData.some(el => el.done);\n    };\n    editTodoItem = (id, text) => {\n        this.setState(prevState => {\n            return {\n                todoData: prevState.todoData.map(todo => {\n                    return todo.id !== id\n                    ? todo\n                    : {...todo, text};\n                })\n            }\n        })\n    };\n    render() {\n        const {filter} = this.state;\n        const visibleItems = this.filterBy(filter);\n        return (\n            <div className=\"todoapp\">\n                <Header addItem={(text) => this.addItem(text)}/>\n                <Main items={visibleItems}\n                      onDeleted={(id) => this.deleteItem(id)}\n                      onChecked={(id) => this.onChecked(id)}\n                      checkAll={this.checkAll}\n                      editTodoItem={this.editTodoItem}\n                />\n                <Footer filter={filter}\n                        onFilterChange={this.onFilterChange}\n                        deleteAll={this.deleteAll}\n                        done={this.showDone()}\n                        size={this.getActiveCount()}/>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}