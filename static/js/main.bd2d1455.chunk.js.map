{"version":3,"sources":["components/Header.js","components/Item.js","components/Main.js","components/Footer.js","App.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","text","target","value","onSubmit","preventDefault","addItem","state","react_default","a","createElement","className","type","placeholder","React","Component","Item","isEdited","currentText","editText","id","toggleEditMode","prevState","editTodoItem","_this2","_this$props","onChecked","deleteItem","done","key","checked","onClick","Main","elements","data","filter","item","filterBy","items","map","Item_Item","onDeleted","checkAll","htmlFor","Footer","buttons","name","label","renderClearCompleted","deleteAll","clearCompleted","size","onFilterChange","_ref","href","concat","App","createTodoItem","Date","now","newTodo","todoData","toConsumableArray","objectSpread","_ref2","flag","_ref3","el","getActiveCount","length","showDone","some","todo","counter","_this$state","Header_Header","CachedVisibleItems","Footer_Footer","memo","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.bd2d1455.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Header extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            text: ''\n        };\n    }\n    onChange = (e) => {\n        this.setState({\n            text: e.target.value\n        });\n    };\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.addItem(this.state.text);\n        this.setState({\n            text: ''\n        })\n    };\n    render () {\n        return (\n            <header className=\"header\">\n                <h1>Todo app</h1>\n                <form onSubmit={this.onSubmit}>\n                    <input\n                        className=\"new-todo\"\n                        onChange={this.onChange}\n                        value={this.state.text}\n                        type=\"text\"\n                        placeholder=\"What needs to be done?\"/>\n                </form>\n            </header>\n        )\n    }\n}\n","import React from 'react';\n\nexport default class Item extends React.Component {\n    state = {\n        isEdited: false,\n        currentText: this.props.text\n    };\n    editText = (id, text) => {\n        this.setState({ currentText: text })\n    };\n    toggleEditMode = () => {\n        this.setState(prevState => ({\n            isEdited: !prevState.isEdited\n        }))\n    };\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.editTodoItem(this.props.id, this.state.currentText);\n        this.toggleEditMode();\n    };\n\n    render() {\n        const {onChecked, deleteItem, id, done, text} = this.props;\n        return (\n            <li key={id}>\n                {\n                    this.state.isEdited ? (\n                        <div className=\"view\">\n                            <form onSubmit={(e) => this.onSubmit(e)}>\n                                <input\n                                    className=\"new-todo edit-mode\"\n                                    type=\"text\"\n                                    value={this.state.currentText}\n                                    onChange={(e) => this.editText(id, e.target.value)}\n                                />\n                            </form>\n                        </div>\n                    ) : (\n                        <div className=\"view\">\n                            <input\n                                className=\"toggle\"\n                                type=\"checkbox\"\n                                onChange={() => onChecked(id)}\n                                checked={done}\n                            />\n                            <label\n                                onClick={this.toggleEditMode}\n                            >\n                                {text}\n                            </label>\n                            <button\n                                className=\"destroy\"\n                                onClick={() => deleteItem(id)}>\n                            </button>\n                        </div>\n                    )\n                }\n            </li>\n        )\n    }\n}","import React from 'react';\nimport Item from './Item';\n\nconst filterBy = (data, filter) => {\n    switch (filter) {\n        case 'active':\n            return data.filter(item => !item.done);\n        case 'done':\n            return data.filter(item => item.done);\n        default:\n            return data;\n    }\n};\n\nexport default class Main extends React.Component {\n    render() {\n        const visibleItems= filterBy(this.props.items, this.props.filter);\n        const elements = visibleItems.map((item) => {\n            return <Item key={item.id}\n                         done = {item.done}\n                         id = {item.id}\n                         text = {item.text}\n                         editTodoItem={this.props.editTodoItem}\n                         deleteItem = {this.props.onDeleted}\n                         onChecked = {this.props.onChecked}/>\n        });\n        return (\n            <main className=\"main\">\n                <input\n                    id=\"toggle-all\"\n                    className=\"toggle-all\"\n                    type=\"checkbox\"\n                    onClick={this.props.checkAll}\n                />\n                <label htmlFor=\"toggle-all\"></label>\n                <ul className=\"todo-list\">\n                    {elements}\n                </ul>\n            </main>\n        )\n    }\n}\n","import React from 'react';\n\nexport default class Footer extends React.Component {\n    buttons = [\n        {id: 0, name: 'all', label: 'All'},\n        {id: 1, name: 'active', label: 'Active'},\n        {id: 2, name: 'done', label: 'Done'}\n    ];\n    renderClearCompleted = () => {\n        return (\n            <button\n                className=\"clear-completed\"\n                onClick={() => this.props.deleteAll()}>\n                Clear completed\n            </button>\n        )\n    };\n    render() {\n        const {done, size, onFilterChange} = this.props;\n        let clearCompleted;\n        if (done) {\n            clearCompleted = this.renderClearCompleted();\n        } else {\n            clearCompleted = null;\n        }\n        return (\n            <footer className=\"footer\">\n            <span className=\"todo-count\">\n                <strong>{size()}</strong>\n                <span>&nbsp;</span>\n                <span>items&nbsp;</span>\n                <span>left</span>\n            </span>\n                <ul className=\"filters\">\n                    {this.buttons.map(({id, name, label}) => {\n                        return (\n                            <li key={id}>\n                                <a\n                                    href={`#/${name}`}\n                                    onClick={() => onFilterChange(name)}>{label}\n                                </a>\n                            </li>\n                        );\n                    })}\n                </ul>\n                {clearCompleted}\n            </footer>\n        )\n    }\n}\n","import React from 'react';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todoData: [],\n            filter: 'all',\n            flag: false,\n            counter: 1\n        };\n    }\n    createTodoItem = (text) => {\n        return {\n            text,\n            done: false,\n            id: Date.now()\n        }\n    };\n    addItem = (newTodo) => {\n        if (newTodo === '') {\n            return;\n        }\n        this.setState((prevState) => ({\n            todoData: [...prevState.todoData, this.createTodoItem(newTodo)]\n        }));\n    };\n\n    onChecked = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: todoData.map((item) => item.id === id ? { ...item, done: !item.done } : item )\n            }\n        })\n    };\n    checkAll = () => {\n        this.setState(({todoData, flag}) => {\n            return {\n                todoData: todoData.map((item) => item.done === flag ? { ...item, done: !item.done } : item ),\n                flag: !flag\n            }\n        })\n    };\n    deleteAll = () => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: todoData.filter(el => !el.done)\n            }\n        });\n    };\n    deleteItem = (id) => {\n        this.setState((prevState) => ({ todoData: prevState.todoData.filter((item) => item.id !== id) }))\n    };\n    getActiveCount = () => {\n        return this.state.todoData.filter(el => !el.done).length;\n    };\n    onFilterChange = (filter) => {\n        this.setState({filter});\n    };\n    showDone = () => {\n        return this.state.todoData.some(el => el.done);\n    };\n    editTodoItem = (id, text) => {\n        this.setState(prevState => {\n            return {\n                todoData: prevState.todoData.map(todo => {\n                    return todo.id !== id\n                    ? todo\n                    : {...todo, text};\n                })\n            }\n        })\n    };\n    render() {\n        const {filter, todoData} = this.state;\n        return (\n            <div className=\"todoapp\">\n                <Header addItem={(text) => this.addItem(text)}/>\n                <CachedVisibleItems items={todoData}\n                      filter={filter}\n                      onDeleted={this.deleteItem}\n                      onChecked ={this.onChecked}\n                      checkAll={this.checkAll}\n                      editTodoItem={this.editTodoItem}\n                />\n                <Footer filter={filter}\n                        onFilterChange={this.onFilterChange}\n                        deleteAll={this.deleteAll}\n                        done={this.showDone}\n                        size={this.getActiveCount} />\n            </div>\n        );\n    }\n}\nconst CachedVisibleItems = React.memo(Main);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}