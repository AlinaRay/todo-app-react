{"version":3,"sources":["components/Header.js","components/Item.js","components/Main.js","helpers/helperFilteredTodos.js","components/Footer.js","App.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","text","target","value","onSubmit","preventDefault","addItem","state","react_default","a","createElement","className","type","placeholder","React","Component","Item","isEdited","currentText","item","editText","id","toggleEditMode","prevState","editTodoItem","_this2","_this$props","onChecked","deleteItem","_this$props$item","done","checked","onClick","getCashedFilteredTodos","handlerCallback","prevArgs","prevValue","_len","arguments","length","callbackArgs","Array","_key","every","arg","i","apply","cashedFilteredTodos","data","filter","Main","items","onDeleted","checkAll","visibleItems","toConsumableArray","htmlFor","map","Item_Item","key","Footer","buttons","name","label","renderClearCompleted","deleteAll","size","onFilterChange","_ref","href","concat","App","createTodoItem","Date","now","todoData","objectSpread","_ref2","flag","_ref3","el","getActiveCount","showDone","some","todo","counter","_this$state","Header_Header","Main_Main","Footer_Footer","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.5e3642da.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Header extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            text: ''\n        };\n    }\n    onChange = (e) => {\n        this.setState({\n            text: e.target.value\n        });\n    };\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.addItem(this.state.text);\n        this.setState({\n            text: ''\n        })\n    };\n    render () {\n        return (\n            <header className=\"header\">\n                <h1>Todo app</h1>\n                <form onSubmit={this.onSubmit}>\n                    <input\n                        className=\"new-todo\"\n                        onChange={this.onChange}\n                        value={this.state.text}\n                        type=\"text\"\n                        placeholder=\"What needs to be done?\"/>\n                </form>\n            </header>\n        )\n    }\n}\n","import React from 'react';\n\nexport default class Item extends React.Component {\n    state = {\n        isEdited: false,\n        currentText: this.props.item.text\n    };\n    editText = (id, text) => {\n        this.setState({ currentText: text })\n    };\n    toggleEditMode = () => {\n        this.setState(prevState => ({\n            isEdited: !prevState.isEdited\n        }))\n    };\n    onSubmit = (id, e) => {\n        e.preventDefault();\n        this.props.editTodoItem(id, this.state.currentText);\n        this.toggleEditMode();\n    };\n\n    render() {\n        const {onChecked, deleteItem, item: {id, done, text}} = this.props;\n        return (\n            <li>\n                {\n                    this.state.isEdited ? (\n                        <div className=\"view\">\n                            <form onSubmit={(e) => this.onSubmit(id,  e)}>\n                                <input\n                                    className=\"new-todo edit-mode\"\n                                    type=\"text\"\n                                    value={this.state.currentText}\n                                    onChange={(e) => this.editText(id, e.target.value)}\n                                />\n                            </form>\n                        </div>\n                    ) : (\n                        <div className=\"view\">\n                            <input\n                                className=\"toggle\"\n                                type=\"checkbox\"\n                                onChange={() => onChecked(id)}\n                                checked={done}\n                            />\n                            <label\n                                onClick={this.toggleEditMode}\n                            >\n                                {text}\n                            </label>\n                            <button\n                                className=\"destroy\"\n                                onClick={() => deleteItem(id)}>\n                            </button>\n                        </div>\n                    )\n                }\n            </li>\n        )\n    }\n}","import React from 'react';\nimport Item from './Item';\nimport cashedFilteredTodos from '../helpers/helperFilteredTodos';\n\nconst getFilteredTodos = (data, filter) => {\n    switch (filter) {\n        case 'active':\n            return data.filter(item => !item.done);\n        case 'done':\n            return data.filter(item => item.done);\n        default:\n            return data;\n    }\n};\n\nconst getCashedFilteredTodos = cashedFilteredTodos(getFilteredTodos);\n\nexport default class Main extends React.Component {\n    render() {\n        const {items, filter, editTodoItem, onDeleted, onChecked, checkAll} = this.props;\n        const visibleItems = getCashedFilteredTodos([...items], filter);\n        return (\n            <main className=\"main\">\n                <input\n                    id=\"toggle-all\"\n                    className=\"toggle-all\"\n                    type=\"checkbox\"\n                    onClick={checkAll}\n                />\n                <label htmlFor=\"toggle-all\"></label>\n                <ul className=\"todo-list\">\n                    {\n                        visibleItems.map((item) => {\n                            return <Item key={item.id}\n                                         item={item}\n                                         editTodoItem={editTodoItem}\n                                         deleteItem = {onDeleted}\n                                         onChecked = {onChecked}/>\n                        })\n                    }\n                </ul>\n            </main>\n        )\n    }\n}\n","const cashedFilteredTodos = (handlerCallback) => {\n    let prevArgs = [];\n    let prevValue = [];\n\n    return (...callbackArgs) => {\n        if (callbackArgs.every((arg, i) => arg === prevArgs[i])) {\n            return prevValue;\n        }\n\n        prevArgs = callbackArgs;\n        prevValue = handlerCallback(...callbackArgs);\n\n        return prevValue;\n    };\n};\n\nexport default cashedFilteredTodos;","import React from 'react';\n\nexport default class Footer extends React.Component {\n    buttons = [\n        {id: 0, name: 'all', label: 'All'},\n        {id: 1, name: 'active', label: 'Active'},\n        {id: 2, name: 'done', label: 'Done'}\n    ];\n    renderClearCompleted = () => {\n        return (\n            <button\n                className=\"clear-completed\"\n                onClick={() => this.props.deleteAll()}>\n                Clear completed\n            </button>\n        )\n    };\n    render() {\n        const {done, size, onFilterChange} = this.props;\n\n        return (\n            <footer className=\"footer\">\n            <span className=\"todo-count\">\n                <strong>{size()}</strong>\n                <span>&nbsp;</span>\n                <span>items&nbsp;</span>\n                <span>left</span>\n            </span>\n                <ul className=\"filters\">\n                    {this.buttons.map(({id, name, label}) => {\n                        return (\n                            <li key={id}>\n                                <a\n                                    href={`#/${name}`}\n                                    onClick={() => onFilterChange(name)}>{label}\n                                </a>\n                            </li>\n                        );\n                    })}\n                </ul>\n                { done() ?\n                    (\n                        <button\n                            className=\"clear-completed\"\n                            onClick={() => this.props.deleteAll()}>\n                            Clear completed\n                        </button>\n                    ) : (\n                        ' '\n                    )\n                }\n            </footer>\n        )\n    }\n}\n","import React from 'react';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todoData: [],\n            filter: 'all',\n            flag: false,\n            counter: 1\n        };\n    }\n    createTodoItem = (text) => {\n        return {\n            text,\n            done: false,\n            id: Date.now()\n        }\n    };\n    addItem = (text) => {\n        if (text === '') {\n            return;\n        }\n        this.setState((prevState) => ({\n            todoData: [...prevState.todoData, this.createTodoItem(text)]\n        }));\n    };\n\n    onChecked = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: todoData.map((item) => item.id === id ? { ...item, done: !item.done } : item )\n            }\n        })\n    };\n    checkAll = () => {\n        this.setState(({todoData, flag}) => {\n            return {\n                todoData: todoData.map((item) => item.done === flag ? { ...item, done: !item.done } : item ),\n                flag: !flag\n            }\n        })\n    };\n    deleteAll = () => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: todoData.filter(el => !el.done)\n            }\n        });\n    };\n    deleteItem = (id) => {\n        this.setState((prevState) => ({ todoData: prevState.todoData.filter((item) => item.id !== id) }))\n    };\n    getActiveCount = () => {\n        return this.state.todoData.filter(el => !el.done).length;\n    };\n    onFilterChange = (filter) => this.setState({filter});\n    showDone = () => {\n        return this.state.todoData.some(el => el.done);\n    };\n    editTodoItem = (id, text) => {\n        this.setState(prevState => {\n            return {\n                todoData: prevState.todoData.map(todo => {\n                    return todo.id !== id\n                    ? todo\n                    : {...todo, text};\n                })\n            }\n        })\n    };\n    render() {\n        const {filter, todoData} = this.state;\n        return (\n            <div className=\"todoapp\">\n                <Header addItem={(text) => this.addItem(text)}/>\n                <Main items={todoData}\n                      filter={filter}\n                      onDeleted={this.deleteItem}\n                      onChecked ={this.onChecked}\n                      checkAll={this.checkAll}\n                      editTodoItem={this.editTodoItem}\n                />\n                <Footer filter={filter}\n                        onFilterChange={this.onFilterChange}\n                        deleteAll={this.deleteAll}\n                        done={this.showDone}\n                        size={this.getActiveCount} />\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}